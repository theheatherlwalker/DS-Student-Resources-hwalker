geom_point(aes(y=TN_Mean), color="red", alpha=0.7) +
theme(legend.position="none") +
scale_x_continuous(breaks = seq(1985,1995)) +
xlab("Year") + ylab("Cigarette packs per capita") +
ggtitle("Cigarette Packs Sold in the United States, from 1985 to 1995")
# Add the labels
p + annotate("text", x=c(1986,1986), y=c(122,127.5), label=c("All Other States", "Tennessee"), color=c("green", "red"))
p <- ggplot(packpc.byState, aes(x=year))+
geom_line(aes(y=stateMean), color="blue") +
geom_point(aes(y=stateMean), color="blue", size=8, alpha=0.7) +
geom_line(aes(y=TN_Mean), color="red") +
geom_point(aes(y=TN_Mean), color="red", size=8, alpha=0.7) +
theme(legend.position="none") +
scale_x_continuous(breaks = seq(1985,1995)) +
xlab("Year") + ylab("Cigarette packs per capita") +
ggtitle("Cigarette Packs Sold in the United States, from 1985 to 1995")
# Add the labels
p + annotate("text", x=c(1986,1986), y=c(122,127.5), label=c("All Other States", "Tennessee"), color=c("green", "red"))
p <- ggplot(packpc.byState, aes(x=year))+
geom_line(aes(y=stateMean), color="blue") +
geom_point(aes(y=stateMean), color="blue", size=4, alpha=0.7) +
geom_line(aes(y=TN_Mean), color="red") +
geom_point(aes(y=TN_Mean), color="red", size=4, alpha=0.7) +
theme(legend.position="none") +
scale_x_continuous(breaks = seq(1985,1995)) +
xlab("Year") + ylab("Cigarette packs per capita") +
ggtitle("Cigarette Packs Sold in the United States, from 1985 to 1995")
# Add the labels
p + annotate("text", x=c(1986,1986), y=c(122,127.5), label=c("All Other States", "Tennessee"), color=c("green", "red"))
p <- ggplot(packpc.byState, aes(x=year))+
geom_line(aes(y=stateMean), color="blue") +
geom_point(aes(y=stateMean), color="blue", size=4, alpha=0.7) +
geom_line(aes(y=TN_Mean), color="dodgerblue3") +
geom_point(aes(y=TN_Mean), color="dodgerblue3", size=4, alpha=0.7) +
theme(legend.position="none") +
scale_x_continuous(breaks = seq(1985,1995)) +
xlab("Year") + ylab("Cigarette packs per capita") +
ggtitle("Cigarette Packs Sold in the United States, from 1985 to 1995")
# Add the labels
p + annotate("text", x=c(1986,1986), y=c(122,127.5), label=c("All Other States", "Tennessee"), color=c("dodgerblue3", "red"))
p <- ggplot(packpc.byState, aes(x=year))+
geom_line(aes(y=stateMean), color="grey46") +
geom_point(aes(y=stateMean), color="grey46", size=4, alpha=0.7) +
geom_line(aes(y=TN_Mean), color="dodgerblue3") +
geom_point(aes(y=TN_Mean), color="dodgerblue3", size=4, alpha=0.7) +
theme(legend.position="none") +
scale_x_continuous(breaks = seq(1985,1995)) +
xlab("Year") + ylab("Cigarette packs per capita") +
ggtitle("Cigarette Packs Sold in the United States, from 1985 to 1995")
# Add the labels
p + annotate("text", x=c(1986,1986), y=c(122,127.5), label=c("All Other States", "Tennessee"), color=c("grey46", "dodgerblue3"))
p <- ggplot(packpc.byState, aes(x=year))+
geom_line(aes(y=stateMean), color="grey46") +
geom_point(aes(y=stateMean), color="grey46", size=4, alpha=0.7) +
geom_line(aes(y=TN_Mean), color="red3") +
geom_point(aes(y=TN_Mean), color="red3", size=4, alpha=0.7) +
theme(legend.position="none") +
scale_x_continuous(breaks = seq(1985,1995)) +
xlab("Year") + ylab("Cigarette packs per capita") +
ggtitle("Cigarette Packs Sold in the United States, from 1985 to 1995")
# Add the labels
p + annotate("text", x=c(1986,1986), y=c(122,127.5), label=c("All Other States", "Tennessee"), color=c("grey46", "red3"))
# Add the labels
p + annotate("text", x=c(1986,1986), y=c(122,127.5), label=c("All Other States", "Tennessee"), color=c("grey46", "red3", hjust=0))
# Add the labels
p + annotate("text", x=c(1986,1986), y=c(122,127.5), label=c("All Other States", "Tennessee"), color=c("grey46", "red3", hjust=c(0,0))
# Add the labels
p + annotate("text", x=c(1986,1986), y=c(122,127.5), label=c("All Other States", "Tennessee"), color=c("grey46", "red3"), hjust=c(0,0))
# Add the labels
p + annotate("text", x=c(1986,1986), y=c(122,127.5), label=c("All Other States", "Tennessee"), color=c("grey46", "red3"), hjust=0))
# Add the labels
p + annotate("text", x=c(1986,1986), y=c(122,127.5), label=c("All Other States", "Tennessee"), color=c("grey46", "red3"), hjust=0)
# Add the labels
p + annotate("text", x=c(1986,1986), y=c(121,127.5), label=c("All Other States", "Tennessee"), color=c("grey46", "red3"), hjust=0)
# Add the labels
p + annotate("text", x=c(1986,1986), y=c(121,127.5), label=c("All Other States", "Tennessee"), color=c("grey46", "red3"), size=c(10,6), hjust=0)
# Add the labels
p + annotate("text", x=c(1986,1986), y=c(127.5,121), label=c("Tennessee", "All Other States"), color=c("red3", "grey46"), size=c(10,6), hjust=0)
# Add the labels
p + annotate("text", x=c(1986,1986), y=c(127.5,121), label=c("Tennessee", "All Other States"), color=c("red3", "grey46"), size=c(6,4), hjust=0)
# Add the labels
p + annotate("text", x=c(1985.75,1986.75), y=c(127.5,121), label=c("Tennessee", "All Other States"), color=c("red3", "grey46"), size=c(6,4), hjust=0)
# Add the labels
p + annotate("text", x=c(1985.75,1985.75), y=c(127.5,121), label=c("Tennessee", "All Other States"), color=c("red3", "grey46"), size=c(6,4), hjust=0)
# Plot together
p <- ggplot() +
geom_point(data=packpc.byState, aes(x=year, y=stateMean, color="stateMean")) +
geom_line(data=packpc.byState, aes(x=year, y=stateMean, color="stateMean")) +
geom_point(data=packpc.byState, aes(x=year, y=TN_Mean, color="TN_Mean")) +
geom_line(data=packpc.byState, aes(x=year, y=TN_Mean, color="TN_Mean")) +
p <- ggplot(packpc.byState, aes(x=year))+
geom_line(aes(y=stateMean), color="grey46") +
geom_point(aes(y=stateMean), color="grey46", size=4, alpha=0.7) +
geom_line(aes(y=TN_Mean), color="red3") +
geom_point(aes(y=TN_Mean), color="red3", size=6, alpha=0.7) +
theme(legend.position="none") +
scale_x_continuous(breaks = seq(1985,1995)) +
xlab("Year") + ylab("Cigarette packs per capita") +
ggtitle("Cigarette Packs Sold in the United States, from 1985 to 1995")
# Add the labels
p + annotate("text", x=c(1985.75,1985.75), y=c(127.5,121), label=c("Tennessee", "All Other States"), color=c("red3", "grey46"), size=c(6,4), hjust=0)
p <- ggplot(packpc.byState, aes(x=year))+
geom_line(aes(y=stateMean), color="grey46") +
geom_point(aes(y=stateMean), color="grey46", size=4, alpha=0.7) +
geom_line(aes(y=TN_Mean), color="red3") +
geom_point(aes(y=TN_Mean), color="red3", size=8, alpha=0.7) +
theme(legend.position="none") +
scale_x_continuous(breaks = seq(1985,1995)) +
xlab("Year") + ylab("Cigarette packs per capita") +
ggtitle("Cigarette Packs Sold in the United States, from 1985 to 1995")
# Add the labels
p + annotate("text", x=c(1985.75,1985.75), y=c(127.5,121), label=c("Tennessee", "All Other States"), color=c("red3", "grey46"), size=c(6,4), hjust=0)
# Add the labels
p + annotate("text", x=c(1985.75,1985.75), y=c(127.5,121), label=c("Tennessee", "All Other States"), color=c("red3", "grey46"), size=5, hjust=0)
p <- ggplot(packpc.byState, aes(x=year))+
geom_line(aes(y=stateMean), color="grey46") +
geom_point(aes(y=stateMean), color="grey46", size=4, alpha=0.7) +
geom_line(aes(y=TN_Mean), color="red3") +
geom_point(aes(y=TN_Mean), color="red3", size=4, alpha=0.7) +
theme(legend.position="none") +
scale_x_continuous(breaks = seq(1985,1995)) +
xlab("Year") + ylab("Cigarette packs per capita") +
ggtitle("Cigarette Packs Sold in the United States, from 1985 to 1995")
# Add the labels
p + annotate("text", x=c(1985.75,1985.75), y=c(127.5,121), label=c("Tennessee", "All Other States"), color=c("red3", "grey46"), size=5, hjust=0)
# Plot together
p <- ggplot(packpc.byState, aes(x=year))+
geom_line(aes(y=stateMean), color="grey46") +
geom_point(aes(y=stateMean), color="grey46", size=4, alpha=0.7) +
geom_line(aes(y=TN_Mean), color="red3") +
geom_point(aes(y=TN_Mean), color="red3", size=4, alpha=0.7) +
theme(legend.position="none") +
scale_x_continuous(breaks = seq(1985,1995)) +
xlab("Year") + ylab("Cigarette packs sold per capita") +
ggtitle("Cigarette Packs Sold in the United States, from 1985 to 1995")
# Add the labels
p + annotate("text", x=c(1985.75,1985.75), y=c(127.5,121), label=c("Tennessee", "All Other States"), color=c("red3", "grey46"), size=5, hjust=0)
# 2. FIND AND PLOT MEDIAN *packpc* PER *year*
# combine summarize() with group_by() and store in variable
medianPackPC <- Cigarette %>% group_by(year) %>% summarize(yearMedian = median(packpc))
# look at medianPackPC
View(medianPackPC)
medianPackPC
# Seeing the min and max for y-axis
range(medianPackPC$yearMedian)
# plot medianPackPC - line plot
ggplot(medianPackPC, aes(x=year, y=yearMedian)) +
geom_point(color="red") +
geom_line() +
scale_x_continuous(breaks = seq(1985,1995)) +
xlab("Year") + ylab("Median number of cigarette packs per capita") +
ggtitle("Cigarette Packs Sold in the United States, from 1985 to 1995")
head(babies)
head(babies)
babies <- read.xlsx(babies_data)
babies <- read.csv(babies_data)
babies <- read.csv(babies_data)
library(readxl)
babies <- read_excel("Documents/GitHub/DS-Student-Resources/DS104-Data-Wrangling-and-Visualization/Assignments/Heather Walker - DS104-01 Examples/babies.xlsx")
View(babies)
babies$Footprint = " "
babies$Footprint = " "
FakeNewsDataset <- read_excel("/Users/heather/Documents/GitHub/DS-Student-Resources/DS104-Data-Wrangling-and-Visualization/Assignments/Heather Walker - DS104-01-13 - Lesson 1 Practice Hands-On/data/FakeNews.csv")
FakeNewsDataset <- read.csv("/Users/heather/Documents/GitHub/DS-Student-Resources/DS104-Data-Wrangling-and-Visualization/Assignments/Heather Walker - DS104-01-13 - Lesson 1 Practice Hands-On/data/FakeNews.csv")
FakeNewsDataset.head()
FakeNewsDataset <- read.csv("\Users\heather\Documents\GitHub\DS-Student-Resources\DS104-Data-Wrangling-and-Visualization\Assignments\Heather Walker - DS104-01-13 - Lesson 1 Practice Hands-On\data\FakeNews.csv")
FakeNews <- read.csv("~/Documents/GitHub/DS-Student-Resources/DS104-Data-Wrangling-and-Visualization/Assignments/Heather Walker - DS104-01-13 - Lesson 1 Practice Hands-On/data/FakeNews.csv")
View(FakeNews)
# look at first rows of dataset
FakeNewsDataset.head()
FakeNewsDataset <- read.csv("/Users/heather/Documents/GitHub/DS-Student-Resources/DS104-Data-Wrangling-and-Visualization/Assignments/Heather Walker - DS104-01-13 - Lesson 1 Practice Hands-On/data/FakeNews.csv")
# look at first rows of dataset
FakeNewsDataset.head()
FakeNews <- read.csv("~/Documents/GitHub/DS-Student-Resources/DS104-Data-Wrangling-and-Visualization/Assignments/Heather Walker - DS104-01-13 - Lesson 1 Practice Hands-On/data/FakeNews.csv")
FakeNews.head()
# look at first rows of dataset
head(FakeNews)
# take a look at dataset in View()
View(FakeNews)
FakeNews$StoryType = "Fake"
FakeNewsEdit = subset(FakeNews, select = -c(when))
View(FakeNewsEdit)
FakeNews = subset(FakeNews, select = -c(when))
FakeNews <- read.csv("~/Documents/GitHub/DS-Student-Resources/DS104-Data-Wrangling-and-Visualization/Assignments/Heather Walker - DS104-01-13 - Lesson 1 Practice Hands-On/data/FakeNews.csv")
# look at first rows of dataset
head(FakeNews)
# take a look at dataset in View()
View(FakeNews)
# 1. Add a column labeld `StoryType` and fill it with `Fake`
FakeNews$StoryType = "Fake"
FakeNews = subset(FakeNews, select = -c(when))
FakeNews <- read.csv("~/Documents/GitHub/DS-Student-Resources/DS104-Data-Wrangling-and-Visualization/Assignments/Heather Walker - DS104-01-13 - Lesson 1 Practice Hands-On/data/FakeNews.csv")
# take a look at dataset in View()
View(FakeNews)
FakeNews$StoryType = "Fake"
FakeNews2 = subset(FakeNews, select = -c(when))
FakeNews = subset(FakeNews, select = -c(when))
FakeNews <- separate(FakeNews, url, c("Website", "Domain"), sep="_/")
library(tidyr) # NOTE: will need to call library `tidyr`to use `sep=`
FakeNews <- separate(FakeNews, url, c("Website", "Domain"), sep="_/")
FakeNews <- unite(FakeNews, Website, Domain, sep = " Domain:")
FakeNews <- read.csv("~/Documents/GitHub/DS-Student-Resources/DS104-Data-Wrangling-and-Visualization/Assignments/Heather Walker - DS104-01-13 - Lesson 1 Practice Hands-On/data/FakeNews.csv")
head(FakeNews)
View(FakeNews)
FakeNews$StoryType = "Fake"
FakeNews2 = subset(FakeNews, select = -c(when))
View(FakeNews2)
FakeNews2 <- separate(FakeNews2, url, c("Website", "Domain"), sep="_/")
FakeNews3 <- unite(FakeNews2, Website, Domain, sep = "_/")
View(FakeNews3)
FakeNews <- read.csv("~/Documents/GitHub/DS-Student-Resources/DS104-Data-Wrangling-and-Visualization/Assignments/Heather Walker - DS104-01-13 - Lesson 1 Practice Hands-On/data/FakeNews.csv")
View(FakeNews)
FakeNews$StoryType = "Fake"
FakeNews2 = subset(FakeNews, select = -c(when))
View(FakeNews2)
library(tidyr) # NOTE: will need to call library `tidyr`to use `sep=`
FakeNews2 <- separate(FakeNews2, url, c("Website", "Domain"), sep="_/")
FakeNews3 <- unite(FakeNews2, Website, Domain, sep = "_/")
View(FakeNews3)
FakeNews <- read.csv("~/Documents/GitHub/DS-Student-Resources/DS104-Data-Wrangling-and-Visualization/Assignments/Heather Walker - DS104-01-13 - Lesson 1 Practice Hands-On/data/FakeNews.csv")
View(FakeNews)
FakeNews$StoryType = "Fake"
FakeNews2 = subset(FakeNews, select = -c(when))
View(FakeNews2)
library(tidyr) # NOTE: will need to call library `tidyr`to use `sep=`
FakeNews2 <- separate(FakeNews2, url, c("Website", "Domain"), sep="_/")
FakeNews3 <- unite(FakeNews2, FullUrl, Website, Domain, sep = "_/")
View(FakeNews3)
FakeNews4 <- FakeNews3[1:10]
FakeNews4 <- FakeNews3[1:10,]
View(FakeNews4)
library(readxl)
energy <- read_excel("Documents/GitHub/DS-Student-Resources/DS104-Data-Wrangling-and-Visualization/Assignments/Heather Walker - DS104-02-03  - Transformations in R/data/energy.xlsx")
energy <- read_excel("/Users/heather/Documents/GitHub/DS-Student-Resources/DS104-Data-Wrangling-and-Visualization/Assignments/Heather Walker - DS104-02-03 - Transformations in R/data/energy.xlsx")
View(energy)
library(tidyr) # needed for flip command `t()`
energy1 <- t(energy)
View(energy1)
energy2 <- as.data.frame(energy1)
View(energy2) # view the result
class(energy2)
library(readxl) # needed to read excel document
zikaColumbia <- read_excel("/Users/heather/Documents/GitHub/DS-Student-Resources/DS104-Data-Wrangling-and-Visualization/Assignments/Heather Walker - DS104-02-12 - Combingin in R/data/ZikaColombia.xlsx")
zikaUS <- read_excel("/Users/heather/Documents/GitHub/DS-Student-Resources/DS104-Data-Wrangling-and-Visualization/Assignments/Heather Walker - DS104-02-12 - Combingin in R/data/ZikaUS.xlsx")
print(zikaColumbia)
(zikaColumbia)
View(zikaColumbia)
View(zikaUS)
zikaCombined <- rbind(zikaColumbia, zikaUS)
View(zikaCombined)
library("rcompanion")
install.packages("rcompanion")
install.packages("IDPmisc")
library("rcompanion")
library("IDPmisc")
setwd("~/Documents/GitHub/DS-Student-Resources/DS105-Intermediate-Statistics/Assignments/DS105-02 Examples")
anime <- read.csv("..\assets\anime.csv")
anime <- read.csv("../assets/anime.csv")
# ---LOAD DATA---
anime <- read.csv("./assets/anime.csv")
View(anime)
# ---PLOT NORMAL HISTORGRAM FOR VARIABLE `score`---
plotNormalHistogram(anime$score)
# ---PLOT NORMAL HISTORGRAM FOR VARIABLE `scorew_by`---
plotNormalHistogram(anime$scored_by)
# ---SQUARE ROOT TRANSFORMATION--
anime$scored_bySQRT <- sqrt(anime$scored_by)
# RUN HISTOGRAM AGAIN
plotNormalHistogram(anime$scored_bySQRT)
# ---LOGARITHMIC TRANSFORMATION--
## Take the log of the `scored_by` variable
anime$scored_byLOG <- log(anime$scored_by)
# RUN HISTOGRAM AGAIN
plotNormalHistogram(anime$scored_byLOG)
library("IDPmisc")
anime2 <- NaRV.omit(anime)
#----RUN HISTOGRAM AGAIN----------------------------------------------
plotNormalHistogram(anime2$scored_byLOG)
plotNormalHistogram(anime$aired_from_year)
#----SQUARE TRANSFORMATION---------------------------------------
anime$aired_from_yearSQ <- anime$aired_from_year * anime$aired_from_year
plotNormalHistogram(anime$aired_from_yearSQ)
anime$aired_from_yearCUBE <- anime$aired_from_year ^ 3
plotNormalHistogram(anime$aired_from_yearCUBE)
library("rcompanion")
library("IDPmisc")
cruise_ship <- read.excel("./assets/cruise_ship.xlsx")
#----LOAD DATA-------------------------------------------------------
cruise_ship <- read.xlsx("./assets/cruise_ship.xlsx")
install.packages("readxl")
install.packages("readxl")
library("rcompanion")
library("IDPmisc")
library("readxl")
#----LOAD DATA-------------------------------------------------------
cruise_ship <- read_excel("./assets/cruise_ship.xlsx")
#----VIEW THE DATA---------------------------------------------------
View(cruise_ship)
#----PLOT NORMAL HISTORGRAM FOR VARIABLE-----------------------------
plotNormalHistogram(cruise_ship$Tonnage)
cruise_ship$TonnageTUK <- transformTukey(cruise_ship$Tonnage, plotit=FALSE)
plotNormalHistogram(cruise_ship$TonnageTUK)
setwd("~/Documents/GitHub/DS-Student-Resources/DS105-Intermediate-Statistics/Assignments/DS105-02-05 - Transformations in R Activity - cruise ships")
library("rcompanion")
library("readxl")
cruise_ship <- read_excel("./assets/cruise_ship.xlsx")
View(cruise_ship)
plotNormalHistogram(cruise_ship$Tonnage)
plotNormalHistogram(cruise_ship$Tonnage)
cruise_ship$TonnageTUK <- transformTukey(cruise_ship$Tonnage, plotit=TRUE)
plotNormalHistogram(cruise_ship$TonnageTUK)
plotNormalHistogram(cruise_ship$YearBlt)
cruise_ship$YearBltTUK <- transformTukey(cruise_ship$YearBlt, plotit=FALSE)
plotNormalHistogram(cruise_ship$YearBltTUK)
plotNormalHistogram(cruise_ship$YearBlt)
plotNormalHistogram(cruise_ship$YearBlt)
plotNormalHistogram(cruise_ship$YearBlt)
cruise_ship$YearBltTUK <- transformTukey(cruise_ship$YearBlt, plotit=FALSE)
plotNormalHistogram(cruise_ship$YearBltTUK)
plotNormalHistogram(cruise_ship$Tonnage)
cruise_ship$TonnageTUK <- transformTukey(cruise_ship$Tonnage, plotit=FALSE)
plotNormalHistogram(cruise_ship$TonnageTUK)
plotNormalHistogram(cruise_ship$Tonnage)
plotNormalHistogram(cruise_ship$passngers)
plotNormalHistogram(cruise_ship$passngers)
plotNormalHistogram(cruise_ship$passngrs)
cruise_ship$TonnageTUK <- transformTukey(cruise_ship$Tonnage, plotit=FALSE)
plotNormalHistogram(cruise_ship$TonnageTUK)
plotNormalHistogram(cruise_ship$passngrs)
cruise_ship$passngrsTUK <- transformTukey(cruise_ship$passngrs, plotit=FALSE)
plotNormalHistogram(cruise_ship$passngrsTUK)
plotNormalHistogram(cruise_ship$Length)
cruise_ship$LengthTUK <- transformTukey(cruise_ship$Length, plotit=FALSE)
plotNormalHistogram(cruise_ship$LengthTUK)
plotNormalHistogram(cruise_ship$Length)
plotNormalHistogram(cruise_ship$Length)
plotNormalHistogram(cruise_ship$Cabins)
cruise_ship$CabinsTUK <- transformTukey(cruise_ship$Cabins, plotit=FALSE)
plotNormalHistogram(cruise_ship$CabinsTUK)
plotNormalHistogram(cruise_ship$Crew)
cruise_ship$CrewTUK <- transformTukey(cruise_ship$Crew, plotit=FALSE)
plotNormalHistogram(cruise_ship$CrewTUK)
plotNormalHistogram(cruise_ship$PassSpcR)
cruise_ship$PassSpcRTUK <- transformTukey(cruise_ship$PassSpcR, plotit=FALSE)
plotNormalHistogram(cruise_ship$PassSpcRTUK)
plotNormalHistogram(cruise_ship$outcab)
cruise_ship$outcabTUK <- transformTukey(cruise_ship$outcab, plotit=FALSE)
plotNormalHistogram(cruise_ship$outcabTUK)
plotNormalHistogram(cruise_ship$YearBlt)
cruise_ship$TonnageTUK <- transformTukey((-1*(cruise_ship$Tonnage)), plotit=FALSE)
cruise_ship$YearBltTUK <- transformTukey((-1*(cruise_ship$YearBlt)), plotit=FALSE)
plotNormalHistogram(cruise_ship$YearBltTUK)
cruise_ship$YearBltTUK <- transformTukey(cruise_ship$YearBlt, plotit=FALSE)
plotNormalHistogram(cruise_ship$YearBltTUK)
plotNormalHistogram(cruise_ship$YearBlt)
plotNormalHistogram(cruise_ship$YearBltTUK)
plotNormalHistogram(cruise_ship$YearBlt)
cruise_ship$YearBltTUK <- transformTukey(cruise_ship$YearBlt, plotit=FALSE)
plotNormalHistogram(cruise_ship$YearBltTUK)
plotNormalHistogram(cruise_ship$Length)
cruise_ship$LengthTUK <- transformTukey(cruise_ship$Length, plotit=FALSE)
plotNormalHistogram(cruise_ship$LengthTUK)
library("rcompanion")
library("readxl")
parksrec <- read_csv("./assets/Seattle_ParksnRec.csv")
setwd("~/Documents/GitHub/DS-Student-Resources/DS105-Intermediate-Statistics/Assignments/DS105-02-11 - Python and R Hands-On - Seattle Parks and Rec")
parksrec <- read_csv("./assets/Seattle_ParksnRec.csv")
# LOAD DATA
parksrec <- read.csv("./assets/Seattle_ParksnRec.csv")
# VIEW THE DATA
View(parksrec)
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(cruise_ship$'YearBlt'# of trips Fall')
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$'# of trips Fall')
library("rcompanion")
library("readxl")
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$'# of trips Fall')
# install.packages("rcompanion")
library("rcompanion")
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$['# of trips Fall'])
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$"# of trips Fall")
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$`# of trips Fall`)
# LOAD DATA
parksrec <- read.csv("./assets/Seattle_ParksnRec.csv")
# VIEW THE DATA
View(parksrec)
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$"# of trips Fall")
parksrec2 <- NaRV.omit(parksrec)
plotNormalHistogram(parksrec$"# of trips Fall")
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec2$"# of trips Fall")
#==============================================================================
# DATA WRANGLING
parksrec2 <- NaRV.omit(parksrec)
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec2$"# of trips Fall")
colnames(parksrec)
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$"X..of.trips.Fall")
# TRANSFORM:
parksrec$X..of.trips.FallTUK <- transformTukey(parksrec$X..of.trips.Fall, plotit=FALSE)
# RUN HISTOGRAM AGAIN
plotNormalHistogram(parksrec$X..of.trips.FallTUK)
View(parksrec)
library("rcompanion")
library("IDPmisc")
parksrec <- read.csv("./assets/Seattle_ParksnRec.csv")
View(parksrec)
colnames(parksrec)
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$"X..of.trips.Fall")
# TRANSFORM:
parksrec$X..of.trips.FallTUK <- transformTukey(parksrec$X..of.trips.Fall, plotit=FALSE)
# RUN HISTOGRAM AGAIN
plotNormalHistogram(parksrec$X..of.trips.FallTUK)
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$"X..of.trips.Fall")
# TRANSFORM:
parksrec$X..of.trips.FallTUK <- transformTukey(parksrec$X..of.trips.Fall, plotit=FALSE)
# RUN HISTOGRAM AGAIN
plotNormalHistogram(parksrec$X..of.trips.FallTUK)
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$"X..of.trips.Fall")
# TRANSFORM:
parksrec$X..of.trips.FallTUK <- transformTukey(parksrec$X..of.trips.Fall, plotit=FALSE)
# RUN HISTOGRAM AGAIN
plotNormalHistogram(parksrec$X..of.trips.FallTUK)
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$"X..of.trips.Fall")
# TRANSFORM:
parksrec$X..of.trips.FallTUK <- transformTukey(parksrec$X..of.trips.Fall, plotit=FALSE)
# RUN HISTOGRAM AGAIN
plotNormalHistogram(parksrec$X..of.trips.FallTUK)
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$"X..of.trips.Fall")
# TRANSFORM:
parksrec$X..of.trips.FallTUK <- transformTukey(parksrec$X..of.trips.Fall, plotit=FALSE)
# RUN HISTOGRAM AGAIN
plotNormalHistogram(parksrec$X..of.trips.FallTUK)
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$"X..of.trips.Fall")
# TRANSFORM:
parksrec$X..of.trips.FallTUK <- transformTukey(parksrec$X..of.trips.Fall, plotit=FALSE)
# RUN HISTOGRAM AGAIN
plotNormalHistogram(parksrec$X..of.trips.FallTUK)
# TRANSFORM:
parksrec$X..of.trips.FallTUK <- transformTukey(parksrec$X..of.trips.Fall, plotit=FALSE)
# RUN HISTOGRAM AGAIN
plotNormalHistogram(parksrec$X..of.trips.FallTUK)
# TRANSFORM:
parksrec$X..of.trips.FallTUK <- transformTukey(parksrec$X..of.trips.Fall, plotit=FALSE)
# RUN HISTOGRAM AGAIN
plotNormalHistogram(parksrec$X..of.trips.FallTUK)
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$"X..of.trips.Fall")
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$"X..of.participants.Fall")
# TRANSFORM:
parksrec$"X..of.participants.FallTUK" <- transformTukey(parksrec$"X..of.participants.Fall", plotit=FALSE)
# RUN HISTOGRAM AGAIN
plotNormalHistogram(parksrec$"X..of.participants.FallTUK")
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$"X..of.trips.Fall")
# TRANSFORM:
parksrec$"X..of.trips.FallTUK" <- transformTukey(parksrec$"X..of.trips.Fall", plotit=FALSE)
# RUN HISTOGRAM AGAIN
plotNormalHistogram(parksrec$"X..of.trips.FallTUK")
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$"X..of.participants.Fall")
# TRANSFORM:
parksrec$"X..of.participants.FallTUK" <- transformTukey(parksrec$"X..of.participants.Fall", plotit=FALSE)
# RUN HISTOGRAM AGAIN
plotNormalHistogram(parksrec$"X..of.participants.FallTUK")
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$"X..of.trips.per.Year")
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$"X..of.trips.per.year")
# TRANSFORM:
parksrec$"X..of.trips.per.YearTUK" <- transformTukey(parksrec$"X..of.trips.per.Year", plotit=FALSE)
# TRANSFORM:
parksrec$"X..of.trips.per.yearTUK" <- transformTukey(parksrec$"X..of.trips.per.year", plotit=FALSE)
# RUN HISTOGRAM AGAIN
plotNormalHistogram(parksrec$"X..of.trips.per.yearTUK")
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$"X..of.participants.per.Year")
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$"X..of.participants.per.year")
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$"X..participants.per.year")
# TRANSFORM:
parksrec$"X..participants.per.yearTUK" <- transformTukey(parksrec$"X..participants.per.year", plotit=FALSE)
# RUN HISTOGRAM AGAIN
plotNormalHistogram(parksrec$"X..participants.per.yearTUK")
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$"increase.decrease.of.prior.year")
# TRANSFORM:
parksrec$"increase.decrease.of.prior.yearTUK" <- transformTukey(parksrec$"increase.decrease.of.prior.year", plotit=FALSE)
# RUN HISTOGRAM AGAIN
plotNormalHistogram(parksrec$"increase.decrease.of.prior.yearTUK")
# PLOT NORMAL HISTORGRAM FOR VARIABLE
plotNormalHistogram(parksrec$"Average...people.per.trip")
# TRANSFORM:
parksrec$"Average...people.per.tripTUK" <- transformTukey(parksrec$"Average...people.per.trip", plotit=FALSE)
# RUN HISTOGRAM AGAIN
plotNormalHistogram(parksrec$"Average...people.per.tripTUK")
source("~/Documents/GitHub/DS-Student-Resources/DS105-Intermediate-Statistics/Assignments/DS105-02-11 - Python and R Hands-On - Seattle Parks and Rec/DS105-02-11 - Python and R Hands-On - Seattle Parks and Rec.Rmd")
